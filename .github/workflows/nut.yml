on:
  workflow_call:
    inputs:
      command:
        required: false
        type: string
        default: yarn test:nuts
        description: "command to execute (ex: yarn test:nuts)"
      nodeVersion:
        required: false
        description: version of node to run tests against.  Use things like [lts/-1, lts/*, latest] to avoid hardcoding versions
        type: string
        default: lts/*
      os:
        required: false
        description: "runs-on property, ex: ubuntu-latest, windows-latest"
        type: string
        default: "ubuntu-latest"
      sfdxExecutablePath:
        required: false
        description: "Path to sfdx executable to be used by NUTs, defaults to ''"
        type: string
      useCache:
        required: false
        type: boolean
        default: true

jobs:
  nut:
    env:
      TESTKIT_AUTH_URL: ${{ secrets.TESTKIT_AUTH_URL}}
      TESTKIT_HUB_USERNAME: ${{ secrets.TESTKIT_HUB_USERNAME }}
      TESTKIT_JWT_CLIENT_ID: ${{ secrets.TESTKIT_JWT_CLIENT_ID }}
      TESTKIT_JWT_KEY: ${{ secrets.TESTKIT_JWT_KEY }}
      TESTKIT_HUB_INSTANCE: ${{ secrets.TESTKIT_HUB_INSTANCE }}
      ONEGP_TESTKIT_AUTH_URL: ${{ secrets.ONEGP_TESTKIT_AUTH_URL }}
      TESTKIT_SETUP_RETRIES: 2
    name: ${{ inputs.command }}
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: salesforcecli/github-workflows/.github/actions/windowsCachePerf@yarn-global-install
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.nodeVersion }}
          cache: yarn
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn global add sfdx-cli @salesforce/cli
      - run: yarn install --network-timeout 600000
        if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}

      - run: yarn compile
      - run: (echo "NUTs attempt 1:" && ${{ inputs.command }}) || (echo "NUTs attempt 2:" && ${{ inputs.command }}) || (echo "NUTs attempt 3:" && ${{ inputs.command }}) || (echo "NUTs failed!" && exit 1)
        if: inputs.sfdxExecutablePath != ''
        env:
          TESTKIT_EXECUTABLE_PATH: ${{ inputs.sfdxExecutablePath }}
      - run: (echo "NUTs attempt 1:" && ${{ inputs.command }}) || (echo "NUTs attempt 2:" && ${{ inputs.command }}) || (echo "NUTs attempt 3:" && ${{ inputs.command }}) || (echo "NUTs failed!" && exit 1)
        if: inputs.sfdxExecutablePath == ''
